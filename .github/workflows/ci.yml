name: Continuous Integration (CI) for Build, Test, and Deploy

on:
  push:
    branches: [ main, develop, feature/ci-setup ]
  pull_request:
    branches: [ main, develop, feature/ci-setup ]

jobs:
  build-test-deploy:
    name: Build Test Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set Up JDK 22
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '22'

    - name: Configure Gradle for Build Scans
      run: |
        # Add both system property and regular property to be safe
        echo "systemProp.gradle.enterprise.agreement.version=yes" >> gradle.properties
        echo "gradle.enterprise.agreement.version=yes" >> gradle.properties
        
    - name: Build with Gradle & Publish Build Report
      env:
        GRADLE_ENTERPRISE_AGREEMENT_VERSION: "yes"
      run: ./gradlew build --scan

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: app/core/build/libs/**

    - name: Run Unit Test
      run: ./gradlew test

    - name: Upload Gradle Test Report
      uses: actions/upload-artifact@v4
      with:
        name: gradle-test-reports
        path: app/core/build/reports/tests/test

    - name: Generate Code Coverage Report
      run: ./gradlew jacocoTestReport

    - name: Upload Code Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-coverage-report
        path: app/core/build/reports/jacoco/test/html/**

    - name: Build Docker Image
      run: docker build --no-cache --pull --build-arg VERSION_TAG=alpha -t ${{ secrets.DOCKER_USERNAME }}/stirling-pdf:latest -f ./Dockerfile .

    - name: Run Docker Image for Verification
      run: |
        docker run -d --name stirling-test -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/stirling-pdf:latest
        sleep 20
        curl -f http://localhost:8080 || (echo "Container failed to start" && exit 1)
        docker rm -f stirling-test

    - name: Log In to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image to Docker Hub for Deployment
      run: docker push ${{ secrets.DOCKER_USERNAME }}/stirling-pdf:latest
